plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
}

group = 'com.sam.db.shard.read.write.split'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springdoc:springdoc-openapi-ui:1.6.15")

	implementation("org.apache.shardingsphere:shardingsphere-jdbc-core:5.3.2")
	implementation("org.apache.shardingsphere:shardingsphere-cluster-mode-core:5.3.2")
	implementation("org.apache.shardingsphere:shardingsphere-cluster-mode-repository-zookeeper:5.3.2")
	implementation("org.apache.shardingsphere:shardingsphere-cluster-mode-repository-api:5.3.2")

	implementation("org.yaml:snakeyaml:1.33")
	implementation("com.squareup.okhttp3:okhttp:3.14.9")

	implementation("org.mapstruct:mapstruct:1.5.5.Final")
	compileOnly("org.projectlombok:lombok")
	annotationProcessor("org.projectlombok:lombok")
	annotationProcessor("org.mapstruct:mapstruct-processor:1.5.5.Final")
	annotationProcessor("org.projectlombok:lombok-mapstruct-binding:0.2.0")

	runtimeOnly("com.mysql:mysql-connector-j")

	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

tasks.test {
	environment "spring.profiles.active", "test"
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/main")
}

tasks.named('test') {
	useJUnitPlatform()
}
